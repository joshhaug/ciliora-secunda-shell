// ===================================================================
// Button common
// ===================================================================
@mixin btn-common {
    background-color: rgba(0, 0, 0, 0);
    background-gradient-direction: none;
    background-gradient-start: rgba(0, 0, 0, 0);
    background-gradient-end: rgba(0, 0, 0, 0);
    box-shadow: 0 0 rgba(0, 0, 0, 0);
    border: none;
    border-width: 0;
    border-radius: 0;


    font-weight: bold;
    font-size: 9pt;


    StIcon {
        @include size(16px, $important:true);
        icon-size: 16px !important;
    }
}


// ===================================================================
// Generate buttons
//
//
//  Provide a $position parameter:
//      s (single)
//      f (first-child)
//      l (last-child)
//      m (middle)
//
//
//  Provide 2 color parameters to modify text-color and bg
//
//
//  Provide 2 additional color parameters to modify
//  text & bg colors of focused states
//  independently from normal/hover/pressed states
//
//
//  Provide $mod:true to modify normal state
//  independently from all other states
//
//
//  The $position & $bg parameteres modify image URL's
//  Name pattern for button assets:
//      button-{$bg}__{$position}.svg
//      button-{$bg}__{$position}--hover.svg
//      button-{$bg}__{$position}--pressed.svg
// ===================================================================
@mixin btn( $position,
            $color,
            $bg,
            $color-focus:$color,
            $bg-focus:$bg,
            $mod:false ) {


    // Parameters in this case are strings, not css colors
    // Quote them to prevent conversion to hex values
    $position: quote($position);
    $bg:       quote($bg);
    $bg-focus: quote($bg-focus);


    // Include common properties
    @include btn-common;


    &:grayed,
    &:disabled,
    &:insensitive,
    &:focus:grayed,
    &:focus:disabled,
    &:focus:insensitive {
        border-image: url("button-assets/button-#{$bg}__#{$position}.svg") 10;
        color: $text-disabled;
        StIcon { color: $text-disabled; }
    }


    // No mod
    @if $mod == false {
        border-image: url("button-assets/button-#{$bg}__#{$position}.svg") 10;
        color: $color;
        StIcon { color: $color; }

        &:hover {
            border-image: url("button-assets/button-#{$bg}__#{$position}--hover.svg") 10;
        }

        &:active,
        &:pressed {
            border-image: url("button-assets/button-#{$bg}__#{$position}--pressed.svg") 10;
        }

        &:focus,
        &:selected {
            border-image: url("button-assets/button-#{$bg-focus}__#{$position}.svg") 10;
            color: $color-focus;
            StIcon { color: $color; }
        }

        &:focus:hover {
            border-image: url("button-assets/button-#{$bg-focus}__#{$position}--hover.svg") 10;
        }

        &:focus:active,
        &:focus:pressed,
        &:focus:selected {
            border-image: url("button-assets/button-#{$bg-focus}__#{$position}--pressed.svg") 10;
        }
    }


    // Mod style
    @if $mod == true {
        border-image: url("button-assets/button-#{$bg}__#{$position}.svg") 10;
        color: $color;
        StIcon { color: $color; }

        &:hover,
        &:focus,
        &:focus:hover {
            border-image: url("button-assets/button-#{$bg-focus}__#{$position}--hover.svg") 10;
            color: $color-focus;
            StIcon { color: $color-focus; }
        }

        &:active,
        &:pressed,
        &:selected,
        &:focus:active,
        &:focus:pressed,
        &:focus:selected {
            border-image: url("button-assets/button-#{$bg-focus}__#{$position}--pressed.svg") 10;
            color: $color-focus;
            StIcon { color: $color-focus; }
        }
    }
}


// ===================================================================
// Generate dialog buttons
//
//
//  Name pattern for button assets:
//      dialog-button-{$bg}__{$position}.svg
//      dialog-button-{$bg}__{$position}--hover.svg
//      dialog-button-{$bg}__{$position}--pressed.svg
// ===================================================================
@mixin btn-dlg( $position,
                $color,
                $bg,
                $color-focus:$color,
                $bg-focus:$bg,
                $mod:false ) {


    // Parameters in this case are strings, not css colors
    // Quote them to prevent conversion to hex values
    $position: quote($position);
    $bg:       quote($bg);
    $bg-focus: quote($bg-focus);


    // Include common properties
    @include btn-common;
    padding: 1.1em 0;


    &:grayed,
    &:disabled,
    &:insensitive,
    &:focus:grayed,
    &:focus:disabled,
    &:focus:insensitive {
        border-image: url("button-assets/dialog-button-#{$bg}__#{$position}.svg") 10;
        color: $text-disabled;
        StIcon { color: $text-disabled; }
    }


    // No mod
    @if $mod == false {
        border-image: url("button-assets/dialog-button-#{$bg}__#{$position}.svg") 10;
        color: $color;
        StIcon { color: $color; }

        &:hover {
            border-image: url("button-assets/dialog-button-#{$bg}__#{$position}--hover.svg") 10;
        }

        &:active,
        &:pressed,
        &:selected {
            border-image: url("button-assets/dialog-button-#{$bg}__#{$position}--pressed.svg") 10;
        }

        &:focus {
            border-image: url("button-assets/dialog-button-#{$bg-focus}__#{$position}.svg") 10;
            color: $color-focus;
            StIcon { color: $color; }
        }

        &:focus:hover {
            border-image: url("button-assets/dialog-button-#{$bg-focus}__#{$position}--hover.svg") 10;
        }

        &:focus:active,
        &:focus:pressed,
        &:focus:selected {
            border-image: url("button-assets/dialog-button-#{$bg-focus}__#{$position}--pressed.svg") 10;
        }
    }


    // Mod style
    @if $mod == true {
        border-image: url("button-assets/dialog-button-#{$bg}__#{$position}.svg") 10;
        color: $color;
        StIcon { color: $color; }

        &:hover,
        &:focus,
        &:focus:hover {
            border-image: url("button-assets/dialog-button-#{$bg-focus}__#{$position}.svg") 10;
            color: $color-focus;
            StIcon { color: $color-focus; }
        }

        &:active,
        &:pressed,
        &:selected,
        &:focus:active,
        &:focus:pressed,
        &:focus:selected {
            border-image: url("button-assets/dialog-button-#{$bg-focus}__#{$position}--pressed.svg") 10;
        }
    }
}


// ===================================================================
// Standard button widths
// ===================================================================
@mixin btn-width($btn-width) {
    @if $btn-width == "small" {
        padding: .9em;
    }

    @if $btn-width == "wide" {
        padding: .9em 2em .9em 2em;
    }
}


// ===================================================================
// Standard buttons
// ===================================================================
@mixin btn-primary {
    @include btn(s, $text-primary, primary, $text-primary, blue);
}


@mixin btn-secondary {
    @include btn(s, $text-primary, secondary, $text-primary, blue);
}


@mixin btn-linked-primary {
    @include btn(m, $text-primary, primary, $bg-focus:blue);

    &:first-child {
        @include btn(f, $text-primary, primary, $bg-focus:blue);
    }

    &:last-child {
        @include btn(l, $text-primary, primary, $bg-focus:blue);
    }

    &:last-child:first-child {
        @include btn(s, $text-primary, primary, $bg-focus:blue);
    }
}


// ===================================================================
// Standard dialog buttons
// ===================================================================

@mixin btn-dialog-primary {
    @include btn-dlg(m, $text-primary, primary, $text-primary, blue);

    &:first-child {
        @include btn-dlg(f, $text-primary, primary, $text-primary, blue);
    }

    &:last-child {
        @include btn-dlg(l, $text-primary, primary, $text-primary, blue);
    }

    &:first-child:last-child {
        @include btn-dlg(s, $text-primary, primary, $text-primary, blue);
    }
}


/* =====================================================
   ! Button global selector
   ===================================================== */
.button {
    @include btn-primary;
    @include btn-width(wide);
}
