// =====================================================
// Common button properties
// =====================================================
@mixin btn-common {
    background-color: rgba(0, 0, 0, 0);
    background-gradient-direction: none;
    background-gradient-start: rgba(0, 0, 0, 0);
    background-gradient-end: rgba(0, 0, 0, 0);
    box-shadow: 0 0 rgba(0, 0, 0, 0);
    border: none;
    border-width: 0;
    border-radius: 0;

    font-weight: bold;
    font-size: $font-size-base;

    StIcon {
        @include size(16px, $important:true);
        icon-size: 16px !important;
    }
}


// =====================================================
// Generate simple buttons
//
//
//  Provide a $position parameter:
//      s (single-child)
//      f (first-child)
//      l (last-child)
//      m (middle: between first and last)
//
//
//  $color-primary & $bg-primary modify text and bg color.
//
//
//  $color-secondary & $bg-secondary are optional and
//  modify text & bg colors of focused states (focus, focus:hover
//  focus:active).
//
//
//  $bg & $position parameteres are not css values, but
//  modify image URL's instead.
//  Name format:
//      button-{$bg}__{$position}.svg
//      button-{$bg}__{$position}--hover.svg
//      button-{$bg}__{$position}--pressed.svg
// =====================================================
@mixin btn(
    $position,
    $color-primary,
    $bg-primary,
    $color-secondary:$color-primary,
    $bg-secondary:$bg-primary,
    $color-disabled:$color-primary
){

    // Parameters in this case are strings, not css colors
    // Quote them to prevent conversion to hex values
    $bg-primary:   quote($bg-primary);
    $bg-secondary: quote($bg-secondary);


    // Include common properties
    @include btn-common;


    border-image: url("img/buttons/button-#{$bg-primary}__#{$position}.svg") 10;
    color: $color-primary;
    StIcon { color: $color-primary; }

    &:hover {
        border-image: url("img/buttons/button-#{$bg-primary}__#{$position}--hover.svg") 10;
    }

    &:active,
    &:pressed,
    &:selected {
        border-image: url("img/buttons/button-#{$bg-primary}__#{$position}--pressed.svg") 10;
    }

    &:focus {
        border-image: url("img/buttons/button-#{$bg-secondary}__#{$position}.svg") 10;
        color: $color-secondary;
        StIcon { color: $color-primary; }
    }

    &:focus:hover {
        border-image: url("img/buttons/button-#{$bg-secondary}__#{$position}--hover.svg") 10;
    }

    &:focus:active,
    &:focus:pressed,
    &:focus:selected {
        border-image: url("img/buttons/button-#{$bg-secondary}__#{$position}--pressed.svg") 10;
    }

    &:grayed,
    &:disabled,
    &:insensitive,
    &:focus:grayed,
    &:focus:disabled,
    &:focus:insensitive {
        border-image: url("img/buttons/button-#{$bg-primary}__#{$position}.svg") 10;
        color: $color-disabled;
        StIcon { color: $color-disabled; }
    }
}


// =====================================================
// Generate dialog buttons
//
//  Name format:
//      dialog-button-{$bg}__{$position}.svg
//      dialog-button-{$bg}__{$position}--hover.svg
//      dialog-button-{$bg}__{$position}--pressed.svg
// =====================================================
@mixin btn-dialog(
    $position,
    $color-primary,
    $bg-primary,
    $color-secondary:$color-primary,
    $bg-secondary:$bg-primary,
    $color-disabled:$color-primary
){

    // Parameters in this case are strings, not css colors
    // Quote them to prevent conversion to hex values
    $bg-primary:   quote($bg-primary);
    $bg-secondary: quote($bg-secondary);


    // Include common properties
    @include btn-common;


    border-image: url("img/buttons/dialog-button-#{$bg-primary}__#{$position}.svg") 10;
    color: $color-primary;
    StIcon { color: $color-primary; }
    padding: 1em .4em;

    &:hover {
        border-image: url("img/buttons/dialog-button-#{$bg-primary}__#{$position}--hover.svg") 10;
    }

    &:active,
    &:pressed,
    &:selected {
        border-image: url("img/buttons/dialog-button-#{$bg-primary}__#{$position}--pressed.svg") 10;
    }

    &:focus {
        border-image: url("img/buttons/dialog-button-#{$bg-secondary}__#{$position}.svg") 10;
        color: $color-secondary;
        StIcon { color: $color-primary; }
    }

    &:focus:hover {
        border-image: url("img/buttons/dialog-button-#{$bg-secondary}__#{$position}--hover.svg") 10;
    }

    &:focus:active,
    &:focus:pressed,
    &:focus:selected {
        border-image: url("img/buttons/dialog-button-#{$bg-secondary}__#{$position}--pressed.svg") 10;
    }

    &:grayed,
    &:disabled,
    &:insensitive,
    &:focus:grayed,
    &:focus:disabled,
    &:focus:insensitive {
        border-image: url("img/buttons/dialog-button-#{$bg-primary}__#{$position}.svg") 10;
        color: $color-disabled;
        StIcon { color: $color-disabled; }
    }
}


// =====================================================
// Standard button widths
// =====================================================
@mixin btn-width($btn-width) {
    @if $btn-width == "small" { padding: 1em; }

    @if $btn-width == "wide" { padding: 1em 2em; }
}


// =====================================================
// Standard buttons
// =====================================================
@mixin btn-primary {
    @include btn(
        s,
        $text-primary, primary,
        $text-primary, blue,
        $text-disabled
    );
}

@mixin btn-secondary {
    @include btn(
        s,
        $text-primary, secondary,
        $text-primary, blue,
        $text-disabled
    );
}

@mixin btn-linked-primary {
    @include btn(m, $text-primary, primary);

    &:first-child {
        @include btn(f, $text-primary, primary);
    }

    &:last-child {
        @include btn(l, $text-primary, primary);
    }

    &:last-child:first-child {
        @include btn(s, $text-primary, primary);
    }
}

@mixin btn-overview {
    @include btn(
        s,
        $text-primary, overview,
        $text-primary, overview-blue,
        $text-disabled
    );
}


// =====================================================
// Standard dialog buttons
// =====================================================
@mixin btn-dialog-primary {
    @include btn-dialog(
        m,
        $text-primary, primary,
        $text-primary, blue,
        $text-disabled
    );

    &:first-child {
        @include btn-dialog(
            f,
            $text-primary, primary,
            $text-primary, blue,
            $text-disabled
        );
    }

    &:last-child {
        @include btn-dialog(
            l,
            $text-primary, primary,
            $text-primary, blue,
            $text-disabled
        );
    }

    &:last-child:first-child {
        @include btn-dialog(
            s,
            $text-primary, primary,
            $text-primary, blue,
            $text-disabled
        );
    }
}


/* =====================================================
   ! Button (global selector)
   ===================================================== */
.button {
    @include btn-primary;
    @include btn-width(wide);
}
